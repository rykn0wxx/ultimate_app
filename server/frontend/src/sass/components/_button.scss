$button-border-radius: 2px;
$button-fab-border-radius: 50%;
$button-icon-border-radius: $button-fab-border-radius;

$button-font-size: $body-font-size-base;
$button-font-size-dense: $body-font-size-base * 13/14;

$button-line-height: rem(3.60);
$button-line-height-dense: rem(3.20);
$button-margin: rem(0.600) rem(0.800);
$button-min-width: rem(8.800);
$button-padding: 0 $button-left-right-padding;

// Fab buttons
$button-fab-line-height: rem(5.600);
$button-fab-mini-width: rem(4.00);
$button-fab-mini-height: rem(4.00);
$button-fab-mini-line-height: rem(4.00);

$button-fab-toast-offset: $button-fab-height * 0.75;

$icon-button-height: rem(4.000);
$icon-button-width: rem(4.000);
$icon-button-margin: rem(0.600);

// Fix issue causing buttons in Firefox to be 2px bigger than they should
button.md-button::-moz-focus-inner {
  border: 0;
}

.md-button {
  display: inline-block;
  position: relative; // Required for absolute canvas child elements.
  cursor: pointer;

  /** Alignment adjustments */
  @include dense(min-height, $button-line-height, $button-line-height-dense);
  min-width: $button-min-width;
  @include dense(line-height, $button-line-height, $button-line-height-dense);

  vertical-align: middle;
  align-items: center;
  text-align: center;

  border-radius: $button-border-radius;
  box-sizing: border-box;

  /* Reset default button appearance */
  user-select: none;
  outline: none;
  border: 0;

  /** Custom styling for button */
  padding: $button-padding;
  margin: $button-margin;

  background: transparent;
  color: currentColor;
  white-space: nowrap;

  /* Uppercase text content */
  text-transform: uppercase;
  font-weight: 500;
  @include dense(font-size, $button-font-size, $button-font-size-dense);
  font-style: inherit;
  font-variant: inherit;
  font-family: inherit;
  text-decoration: none;

  // Ink Ripple should not create any overflow.
  overflow: hidden;

  transition: box-shadow $swift-ease-out-duration $swift-ease-out-timing-function,
              background-color $swift-ease-out-duration $swift-ease-out-timing-function;

  &:focus {
    outline: none;
  }

  &:hover, &:focus {
    text-decoration: none;
  }

  &.md-cornered {
    border-radius: 0;
  }

  &.md-icon {
    padding: 0;
    background: none;
  }

  &.md-raised {
		background-color: #f5f5f5;
		color: #212121;
    &:not([disabled]) {
      @include md-shadow-bottom-z-1();
    }
		&:hover, &:focus {
			background-color: #ffffff;
		}
  }

  &.md-icon-button {
    margin: 0 $icon-button-margin;
    height: $icon-button-height;
    min-width: 0;
    line-height: $icon-size;
    padding: $baseline-grid;
    width: $icon-button-width;
    border-radius: $button-icon-border-radius;
		&.md-mini {
			line-height: $button-fab-mini-line-height;
			width: $button-fab-mini-width;
			height: $button-fab-mini-height;
		}
		&:hover {
			background-color: transparent;
		}
  }

  &.md-fab {

    // Include the top/left/bottom/right fab positions
    @include fab-all-positions();

    z-index: $z-index-fab;

    line-height: $button-fab-line-height;

    min-width: 0;
    width: $button-fab-width;
    height: $button-fab-height;
    vertical-align: middle;

    @include md-shadow-bottom-z-1();
    border-radius: $button-fab-border-radius;
    background-clip: padding-box;
    overflow: hidden;

    transition: $swift-ease-in;
    transition-property: background-color, box-shadow, transform;

    &.md-mini {
      line-height: $button-fab-mini-line-height;
      width: $button-fab-mini-width;
      height: $button-fab-mini-height;
			color: color-yiq($s-color);
    }
		background-color: $s-color;
		color: color-yiq($s-color);
		&:hover, &:focus {
			background-color: $s-dark;
		}
  }

  &:not([disabled]) {
    &.md-raised,
    &.md-fab {
      &.md-focused {
        @include md-shadow-bottom-z-1();
      }
      &:active {
        @include md-shadow-bottom-z-2();
      }
    }
  }
	&:hover, &:focus {
		background-color: rgba(158,158,158,0.2);
	}
}

// Using `display:block;` is required for correct vertical alignment
// because '.md-button' uses `display:inline-block;`.
.md-button.md-icon-button,
button.md-button.md-fab {
  .md-icon {
    display: block;
  }
}

.md-button-group {
  display: flex;
  flex: 1;
  width: 100%;

  & > .md-button {
    flex: 1;

    display: block;

    overflow: hidden;

    width: 0;

    border-width: 1px 0px 1px 1px;
    border-radius: 0;

    text-align: center;
    text-overflow: ellipsis;
    white-space: nowrap;

    &:first-child {
      border-radius: 2px 0px 0px 2px;
    }
    &:last-child {
      border-right-width: 1px;
      border-radius: 0px 2px 2px 0px;
    }
  }
}
// IE only
@media screen and (-ms-high-contrast: active) {
  .md-button.md-raised,
  .md-button.md-fab {
    border: 1px solid #fff;
  }
}

.md-icon {
  margin: auto;
  background-repeat: no-repeat no-repeat;
  display: inline-block;
  vertical-align: middle;
  fill: currentColor;
  height: $icon-size;
  width: $icon-size;

  // The icons should not shrink on smaller viewports.
  min-height: $icon-size;
  min-width: $icon-size;

  svg {
    pointer-events: none;
    display: block;
  }

  &[md-font-icon] {
    line-height: $icon-size;
    width: auto;
  }
}

@each $z_color, $z_value in $z_colors {
	$fg: color-yiq($z_value);
	// $bg: mix(#fff, mix(#000, $z_value, 30%), 10%);
	$bg: mix(#111, $z_value, 30%);

	.md-button.md-#{$z_color} {
		color: $z_value;
		&.md-raised, &.md-fab {
			color: $fg;
			background-color: $z_value;
			&:not([disabled]) {
				.md-icon {
          color: $fg;
        }
				&:hover, &:focus {
          background-color: $bg;
        }
			}
		}
		&:not([disabled]) {
			.md-icon {
				color: $z_value;
			}
		}
	}

}
